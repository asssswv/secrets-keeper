// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKeeper is a mock of Keeper interface.
type MockKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockKeeperMockRecorder
}

// MockKeeperMockRecorder is the mock recorder for MockKeeper.
type MockKeeperMockRecorder struct {
	mock *MockKeeper
}

// NewMockKeeper creates a new mock instance.
func NewMockKeeper(ctrl *gomock.Controller) *MockKeeper {
	mock := &MockKeeper{ctrl: ctrl}
	mock.recorder = &MockKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeeper) EXPECT() *MockKeeperMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockKeeper) Get(key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockKeeperMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockKeeper)(nil).Get), key)
}

// Set mocks base method.
func (m *MockKeeper) Set(key, message string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", key, message)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockKeeperMockRecorder) Set(key, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockKeeper)(nil).Set), key, message)
}

// MockUUIDKeyBuilder is a mock of UUIDKeyBuilder interface.
type MockUUIDKeyBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockUUIDKeyBuilderMockRecorder
}

// MockUUIDKeyBuilderMockRecorder is the mock recorder for MockUUIDKeyBuilder.
type MockUUIDKeyBuilderMockRecorder struct {
	mock *MockUUIDKeyBuilder
}

// NewMockUUIDKeyBuilder creates a new mock instance.
func NewMockUUIDKeyBuilder(ctrl *gomock.Controller) *MockUUIDKeyBuilder {
	mock := &MockUUIDKeyBuilder{ctrl: ctrl}
	mock.recorder = &MockUUIDKeyBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUUIDKeyBuilder) EXPECT() *MockUUIDKeyBuilderMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockUUIDKeyBuilder) Get() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockUUIDKeyBuilderMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUUIDKeyBuilder)(nil).Get))
}
